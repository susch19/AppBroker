// <auto-generated />
using System;
using AppBroker.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppBroker.Core.Database.Migrations.BrokerDb
{
    [DbContext(typeof(BrokerDbContext))]
    [Migration("20220929174427_AddedDeserializationPersistance")]
    partial class AddedDeserializationPersistance
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("AppBroker.Core.Database.Model.DeviceMappingModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ChildId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.HasIndex("ParentId");

                    b.ToTable("DeviceToDeviceMappings");
                });

            modelBuilder.Entity("AppBroker.Core.Database.Model.DeviceModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DeserializationData")
                        .HasColumnType("TEXT");

                    b.Property<string>("FriendlyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastState")
                        .HasColumnType("TEXT");

                    b.Property<long?>("LastStateChange")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("StartAutomatically")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("AppBroker.Core.Database.Model.HeaterConfigModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte>("DayOfWeek")
                        .HasColumnType("INTEGER");

                    b.Property<long>("DeviceId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Temperature")
                        .HasColumnType("REAL");

                    b.Property<long>("TimeOfDay")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("HeaterConfigs");
                });

            modelBuilder.Entity("AppBroker.Core.Database.Model.DeviceMappingModel", b =>
                {
                    b.HasOne("AppBroker.Core.Database.Model.DeviceModel", "Child")
                        .WithMany()
                        .HasForeignKey("ChildId");

                    b.HasOne("AppBroker.Core.Database.Model.DeviceModel", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Child");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("AppBroker.Core.Database.Model.HeaterConfigModel", b =>
                {
                    b.HasOne("AppBroker.Core.Database.Model.DeviceModel", "Device")
                        .WithMany("HeaterConfigs")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("AppBroker.Core.Database.Model.DeviceModel", b =>
                {
                    b.Navigation("HeaterConfigs");
                });
#pragma warning restore 612, 618
        }
    }
}
