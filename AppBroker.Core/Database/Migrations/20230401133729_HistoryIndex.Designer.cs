// <auto-generated />
using AppBroker.Core.Database.History;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppBroker.Core.Database.Migrations
{
    [DbContext(typeof(HistoryContext))]
    [Migration("20230401133729_HistoryIndex")]
    partial class HistoryIndex
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("AppBroker.Core.Database.History.HistoryDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("DeviceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("AppBroker.Core.Database.History.HistoryProperty", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeviceId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("AppBroker.Core.Database.History.HistoryValueBase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("HistoryValueId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Timestamp")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("HistoryValueId");

                    b.HasIndex(new[] { "Timestamp", "HistoryValueId" }, "HistoryValueTimestampIndex")
                        .IsUnique();

                    b.ToTable("HistoryValueBase");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("AppBroker.Core.Database.History.HistoryValueBool", b =>
                {
                    b.HasBaseType("AppBroker.Core.Database.History.HistoryValueBase");

                    b.Property<bool>("Value")
                        .HasColumnType("INTEGER");

                    b.ToTable("HistoryValueBool");
                });

            modelBuilder.Entity("AppBroker.Core.Database.History.HistoryValueDateTime", b =>
                {
                    b.HasBaseType("AppBroker.Core.Database.History.HistoryValueBase");

                    b.Property<long>("Value")
                        .HasColumnType("INTEGER");

                    b.ToTable("HistoryValueDateTime");
                });

            modelBuilder.Entity("AppBroker.Core.Database.History.HistoryValueDouble", b =>
                {
                    b.HasBaseType("AppBroker.Core.Database.History.HistoryValueBase");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.ToTable("HistoryValueDouble");
                });

            modelBuilder.Entity("AppBroker.Core.Database.History.HistoryValueHeaterConfig", b =>
                {
                    b.HasBaseType("AppBroker.Core.Database.History.HistoryValueBase");

                    b.Property<byte>("DayOfWeek")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Temperature")
                        .HasColumnType("REAL");

                    b.Property<long>("TimeOfDay")
                        .HasColumnType("INTEGER");

                    b.ToTable("HistoryValueHeaterConfig");
                });

            modelBuilder.Entity("AppBroker.Core.Database.History.HistoryValueLong", b =>
                {
                    b.HasBaseType("AppBroker.Core.Database.History.HistoryValueBase");

                    b.Property<long>("Value")
                        .HasColumnType("INTEGER");

                    b.ToTable("HistoryValueLong");
                });

            modelBuilder.Entity("AppBroker.Core.Database.History.HistoryValueString", b =>
                {
                    b.HasBaseType("AppBroker.Core.Database.History.HistoryValueBase");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("HistoryValueString");
                });

            modelBuilder.Entity("AppBroker.Core.Database.History.HistoryValueTimeSpan", b =>
                {
                    b.HasBaseType("AppBroker.Core.Database.History.HistoryValueBase");

                    b.Property<long>("Value")
                        .HasColumnType("INTEGER");

                    b.ToTable("HistoryValueTimeSpan");
                });

            modelBuilder.Entity("AppBroker.Core.Database.History.HistoryProperty", b =>
                {
                    b.HasOne("AppBroker.Core.Database.History.HistoryDevice", "Device")
                        .WithMany("HistoryValues")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("AppBroker.Core.Database.History.HistoryValueBase", b =>
                {
                    b.HasOne("AppBroker.Core.Database.History.HistoryProperty", "HistoryValue")
                        .WithMany("Values")
                        .HasForeignKey("HistoryValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HistoryValue");
                });

            modelBuilder.Entity("AppBroker.Core.Database.History.HistoryValueBool", b =>
                {
                    b.HasOne("AppBroker.Core.Database.History.HistoryValueBase", null)
                        .WithOne()
                        .HasForeignKey("AppBroker.Core.Database.History.HistoryValueBool", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppBroker.Core.Database.History.HistoryValueDateTime", b =>
                {
                    b.HasOne("AppBroker.Core.Database.History.HistoryValueBase", null)
                        .WithOne()
                        .HasForeignKey("AppBroker.Core.Database.History.HistoryValueDateTime", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppBroker.Core.Database.History.HistoryValueDouble", b =>
                {
                    b.HasOne("AppBroker.Core.Database.History.HistoryValueBase", null)
                        .WithOne()
                        .HasForeignKey("AppBroker.Core.Database.History.HistoryValueDouble", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppBroker.Core.Database.History.HistoryValueHeaterConfig", b =>
                {
                    b.HasOne("AppBroker.Core.Database.History.HistoryValueBase", null)
                        .WithOne()
                        .HasForeignKey("AppBroker.Core.Database.History.HistoryValueHeaterConfig", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppBroker.Core.Database.History.HistoryValueLong", b =>
                {
                    b.HasOne("AppBroker.Core.Database.History.HistoryValueBase", null)
                        .WithOne()
                        .HasForeignKey("AppBroker.Core.Database.History.HistoryValueLong", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppBroker.Core.Database.History.HistoryValueString", b =>
                {
                    b.HasOne("AppBroker.Core.Database.History.HistoryValueBase", null)
                        .WithOne()
                        .HasForeignKey("AppBroker.Core.Database.History.HistoryValueString", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppBroker.Core.Database.History.HistoryValueTimeSpan", b =>
                {
                    b.HasOne("AppBroker.Core.Database.History.HistoryValueBase", null)
                        .WithOne()
                        .HasForeignKey("AppBroker.Core.Database.History.HistoryValueTimeSpan", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppBroker.Core.Database.History.HistoryDevice", b =>
                {
                    b.Navigation("HistoryValues");
                });

            modelBuilder.Entity("AppBroker.Core.Database.History.HistoryProperty", b =>
                {
                    b.Navigation("Values");
                });
#pragma warning restore 612, 618
        }
    }
}
